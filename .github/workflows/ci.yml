name: validation

on:
  pull_request:
    types: [ opened, synchronize, reopened, closed ]
  release:
    types: [ published, created, edited ]
  workflow_dispatch:
  schedule:
    # daily
    - cron:  '0 0 * * *'

jobs:

  meta-flutter:
  
    env:
      YOCTO_VERSION: 3.1.11
      YOCTO_BRANCH: dunfell
      REGISTRY_USER: ${{ github.actor }}
      REGISTRY_PASSWORD: ${{ github.token }}
      IMAGE_REGISTRY: ghcr.io/meta-flutter
      IMAGE_PATH: ghcr.io/meta-flutter/ubuntu-20-dev:main
      DL_DIR: /home/dev/dl
      
    runs-on: [self-hosted, linux]
    
    container:
      image: ghcr.io/meta-flutter/ubuntu-20-dev:main
      options: --user 1000 --storage-opt overlay.mount_program=/usr/bin/fuse-overlayfs --storage-opt overlay.mountopt=nodev,metacopy=on,noxattrs=1 -v /b/yocto/dl:/home/dev/dl:Z
      
    steps:
    
      - name: Display UID Info
        run: |
          whoami
          id -u
          cat /etc/subuid

      - uses: actions/checkout@v2
        with:
          path: 'meta-flutter'
          
      - name: Set Ownership
        run: |
          chown -R dev:dev $HOME .
          
      - name: Fetch poky
        run: |
          mv poky/build/sstate-cache . || true
          rm -rf poky meta-openembedded
          git clone -b ${{ env.YOCTO_BRANCH }} --single-branch git://git.yoctoproject.org/poky
          git clone -b ${{ env.YOCTO_BRANCH }} --single-branch git://git.openembedded.org/meta-openembedded
          
      - name: Configure build
        run: |
          cd poky
          . ./oe-init-build-env
          mv ../../sstate-cache . || true
          echo 'SSTATE_MIRRORS = "file://.* http://sstate.yoctoproject.org/${{ env.YOCTO_VERSION }}/PATH;downloadfilename=PATH"' >> ./conf/local.conf
          echo 'INIT_MANAGER = "systemd"' >> ./conf/local.conf
          echo 'DISTRO_FEATURES_remove = " sysvinit x11"' >> ./conf/local.conf
          echo 'DISTRO_FEATURES_append = " wayland opengl systemd"' >> ./conf/local.conf
          echo 'DISTRO_FEATURES_BACKFILL_CONSIDERED = ""' >> ./conf/local.conf
          echo 'VIRTUAL-RUNTIME_init_manager = "systemd"' >> ./conf/local.conf
          echo 'VIRTUAL-RUNTIME_initscripts = ""' >> ./conf/local.conf
          echo 'PREFERRED_PROVIDER_virtual/kernel = "linux-dummy"' >> ./conf/local.conf
          echo 'DL_DIR = "/home/dev/dl"' >> ./conf/local.conf
          cat ./conf/local.conf
          bitbake-layers add-layer ../../meta-openembedded/meta-oe
          bitbake-layers add-layer ../../meta-flutter
          bitbake-layers show-layers

      - name: Build core-image-minimal
        run: |
          cd poky
          . ./oe-init-build-env
          bitbake core-image-minimal

      - name: Publish core-image-minimal artifacts
        uses: actions/upload-artifact@v2
        with:
          name: core-image-minimal-x86_64-linux
          path: |
            poky/build/tmp/deploy/images/qemux86-64/*

      - name: Build flutter-engine
        run: |
          pwd
          cd poky
          . ./oe-init-build-env
          bitbake flutter-engine
          ls -la tmp/deploy/rpm/

      - name: Publish flutter-engine artifacts
        uses: actions/upload-artifact@v2
        with:
          name: flutter-engine-x86_64-linux
          path: |
            poky/build/tmp/deploy/rpm/core2_64/flutter-engine*.rpm

      - name: Build flutter-pi
        run: |
          pwd
          cd poky
          . ./oe-init-build-env
          bitbake flutter-pi

      - name: Publish flutter-pi artifacts
        uses: actions/upload-artifact@v2
        with:
          name: flutter-pi-x86_64-linux
          path: |
             poky/build/tmp/deploy/rpm/core2_64/flutter-pi*.rpm

      - name: Build flutter-gallery
        run: |
          pwd
          cd poky
          . ./oe-init-build-env
          bitbake flutter-gallery

      - name: Publish flutter-gallery artifacts
        uses: actions/upload-artifact@v2
        with:
          name: flutter-gallery-x86_64-linux
          path: |
            poky/build/tmp/deploy/rpm/core2_64/flutter-gallery*.rpm
